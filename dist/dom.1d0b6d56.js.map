{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["// window.dom = {\r\n//     //create: function(){}\r\n//     //create(){}\r\n// };\r\n\r\n// dom.create = function (tagNmae) {\r\n//     return document.createElement(tagNmae)\r\n//     //加入一个div\r\n//     //create 创造\r\n// };\r\n//也可以写在上面,简化 再 简化\r\n\r\n\r\n\r\nwindow.dom = {\r\n    create(string){\r\n        // const container = document.createElement(\"div\");\r\n        // container.innerHTML = string;\r\n        // return container.children[0];\r\n        //此容器是一个div，而div里面不允许存在<tr>、<td>类的\r\n        \r\n        const container = document.createElement\r\n        (\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n        //template 是新语法，专门包用标签用的\r\n        // trim 作用是消除空格，\r\n        //如果不加trim标签两边有空格的话会显示为文本格式\r\n    },\r\n    after(node, node2) {\r\n        // console.log(node.nextSibling);\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n        //在它后面加一个节点话，因为没有insetAfter\r\n        //所以采用，在其后面的标签，的前面加一个\r\n        //就是本身的后面        \r\n    },\r\n    before(node, node2){\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n    append(parent, node){\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node, parent){\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n        //把parent放在节点的前面\r\n        //再把节点移出去\r\n    },\r\n\r\n\r\n\r\n    // 删\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n        // return 一下，是为了保留这个节点的引用\r\n    },\r\n    empty(node){\r\n        const {childNodes} = node\r\n        //const chilNodes = node.childNodes 可以简写为上面的\r\n        const array = []\r\n        let x = node.firstChild\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array \r\n        // 简单方法node.innerHTML = ''；\r\n        //如果后续还需要这个节点的引用，就使用上面的方法\r\n        //删掉这个节点的所有儿子\r\n    },\r\n    attr(node,name,value){//这叫做“重载”，\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name, value)\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name)\r\n        }\r\n        // 这里的数字代表参数的数量\r\n    },\r\n    text(node, string){ //适配\r\n        if(arguments.length === 2){\r\n            if('innerText' in node){\r\n                node.innerText = string  //ie\r\n            }else{\r\n                node.textContent = string // firefox / chrome\r\n            }\r\n        }else if(arguments.length === 1){\r\n            if('innerText' in node){\r\n                return node.innerText\r\n            }else{\r\n                return node.textContent\r\n            }\r\n        } \r\n        //大部分两种都支持，怎么避免，做一个判断\r\n    },\r\n    html(node, string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string\r\n        }else if(arguments.length === 1){\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value){\r\n        if(arguments.length===3){\r\n            //dom.style(div, 'color', 'red')\r\n            node.style[name] = value\r\n        }else if(arguments.length===2){\r\n            if(typeof name === 'string'){\r\n                //dom.style(div, 'color')\r\n            return node.style[name]\r\n            //[] 对象是变量，要调用的话，用[]包起来；不能用“点\"\r\n\r\n            }else if(name instanceof Object){\r\n                // dom.style(div, {color: 'red'})\r\n                const object = name\r\n                for(let key in object){\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n        \r\n    },\r\n    class: {\r\n        add(node, className){\r\n            node.classList.add(className)\r\n            //添加\r\n        },\r\n        remove(node, className){\r\n            node.classList.remove(className)\r\n            //删除\r\n        },\r\n        contains(node, className){\r\n            return node.classList.contains(className)\r\n            //查找有没有\r\n        }\r\n    },\r\n    on(node, eventName, fn){\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn){\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n\r\n    \r\n    \r\n    //查\r\n    find(selector, scope){\r\n        return (scope || document).querySelectorAll(selector)\r\n        // selector 挑选着/选择器\r\n        // scope  范围\r\n        //如果有scope就在scope里调用，如果有document，在document里调\r\n    },\r\n    parent(node){\r\n        return node.parentNode\r\n    },\r\n    children(node){\r\n        return node.children\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children)\r\n        .filter(n => n!==node)\r\n        //filter 过滤\r\n    },\r\n    next(node){\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling\r\n            // \"1\"表示节点；“3”表示文本\r\n        }\r\n        return x\r\n    },\r\n    previous(node){\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling\r\n            // \"1\"表示节点；“3”表示文本\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn){\r\n        for(let i = 0; i<nodeList.length; i++){\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for(i =0; i<list.length;i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};"]}